version: '2.2'
services:
  postgres-product:
    container_name: postgres-product
    image: postgres
    cpus: 0.5
    mem_limit: 200m
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres-product:/data/postgres
    expose:
      - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: unless-stopped
    networks:
      - new-network
  postgres-login:
    container_name: postgres-login
    image: postgres
    cpus: 0.5
    mem_limit: 200m
    environment:
      POSTGRES_DB: login-service
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
      #De esta forma los datos de /data/postgres serán guardados en mi máquina en una carpeta llamada postgres-order
    volumes:
      - ./data/postgres-login:/data/postgres
    expose:
      - "5432"
    ports:
      - "5432:5432"
    command: -p 5432
    restart: unless-stopped
    networks:
      - new-network
  krakendnuxt:
    container_name: krakendnuxt
    image: krakend-image
    volumes:
      - ./config/krakend:/etc/krakend
      - ./data/jwk:/app/data/jwk  # Asegúrate de cambiar '/app/data/jwk' al directorio correcto en el contenedor si es necesario
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    command: [ "run", "-d", "-c", "/etc/krakend/krakend.json" ]
    networks:
      - new-network

  resource-server:
    container_name: resource-server
    image: backend-nuxt-krakend-img
    ports:
      - "8200:8080"
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5433/postgres
    depends_on:
      - postgres-product
    networks:
      - new-network
  generator-json:
    container_name: generator-json
    image: generator-json-img
    ports:
      - "8400:8080"
    restart: unless-stopped
    networks:
      - new-network
  login:
    container_name: login
    image: login-img
    ports:
      - "8300:8080"
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-login:5432/login-service
    depends_on:
      - postgres-login
    networks:
      - new-network


networks:
  new-network:
    driver: bridge